{"ast":null,"code":"var _jsxFileName = \"/home/oleksandr/\\u0421\\u0442\\u0456\\u043B\\u044C\\u043D\\u0438\\u0446\\u044F/study/okta web/react3/src/component-hooks/buttons/GetEndpointBt.js\",\n    _s = $RefreshSig$();\n\nimport { EndpointsNameList } from '../EndpointsNameList';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const GetEndpointBt = ({\n  endpoint,\n  idEndpoint\n}) => {\n  _s();\n\n  const dispatch = useDispatch(); //Local state download icon\n\n  const [downloadIcon, setdownloadIcon] = useState(false);\n\n  const endpointFetch = async () => {\n    if (!EndpointsNameList.includes(endpoint.toLowerCase())) {\n      console.error(`Неможливо перейти за адресою typicode.com/${endpoint}/${idEndpoint}`);\n      return;\n    }\n\n    setdownloadIcon(true);\n    const resp = await fetch(`https://jsonplaceholder.typicode.com/${endpoint}/${idEndpoint}`);\n    const json = await resp.json();\n    setdownloadIcon(false); // add to store\n\n    dispatch({\n      type: 'ADDTOSTORE',\n      payload: json\n    });\n    dispatch({\n      type: 'SAVEINPUTSVALEU',\n      payload: endpoint\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: endpointFetch,\n      children: \"Get endpoint \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), downloadIcon && /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"\\u269B\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 31\n    }, this)]\n  }, void 0, true);\n};\n\n_s(GetEndpointBt, \"lH0uREHlD5ndWOPcadl5Vp2pF7I=\", false, function () {\n  return [useDispatch];\n});\n\n_c = GetEndpointBt;\n\nvar _c;\n\n$RefreshReg$(_c, \"GetEndpointBt\");","map":{"version":3,"sources":["/home/oleksandr/Стільниця/study/okta web/react3/src/component-hooks/buttons/GetEndpointBt.js"],"names":["EndpointsNameList","useState","useDispatch","GetEndpointBt","endpoint","idEndpoint","dispatch","downloadIcon","setdownloadIcon","endpointFetch","includes","toLowerCase","console","error","resp","fetch","json","type","payload"],"mappings":";;;AAAA,SAASA,iBAAT,QAAkC,sBAAlC;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,WAAT,QAA4B,aAA5B;;;AAGA,OAAO,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KAA8B;AAAA;;AAEvD,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B,CAFuD,CAIvD;;AACA,QAAM,CAACK,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,CAAC,KAAD,CAAhD;;AAEA,QAAMQ,aAAa,GAAG,YAAY;AAC9B,QAAI,CAACT,iBAAiB,CAACU,QAAlB,CAA2BN,QAAQ,CAACO,WAAT,EAA3B,CAAL,EAAyD;AACrDC,MAAAA,OAAO,CAACC,KAAR,CAAe,6CAA4CT,QAAS,IAAGC,UAAW,EAAlF;AACA;AACH;;AACDG,IAAAA,eAAe,CAAC,IAAD,CAAf;AACA,UAAMM,IAAI,GAAG,MAAMC,KAAK,CAAE,wCAAuCX,QAAS,IAAGC,UAAW,EAAhE,CAAxB;AACA,UAAMW,IAAI,GAAG,MAAMF,IAAI,CAACE,IAAL,EAAnB;AACAR,IAAAA,eAAe,CAAC,KAAD,CAAf,CAR8B,CAU9B;;AACAF,IAAAA,QAAQ,CAAC;AAAEW,MAAAA,IAAI,EAAE,YAAR;AAAsBC,MAAAA,OAAO,EAAEF;AAA/B,KAAD,CAAR;AACAV,IAAAA,QAAQ,CAAC;AAAEW,MAAAA,IAAI,EAAE,iBAAR;AAA2BC,MAAAA,OAAO,EAAEd;AAApC,KAAD,CAAR;AACH,GAbD;;AAgBA,sBACI;AAAA,4BACI;AAAQ,MAAA,OAAO,EAAEK,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAEMF,YAAY,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFtB;AAAA,kBADJ;AAOH,CA9BM;;GAAMJ,a;UAEQD,W;;;KAFRC,a","sourcesContent":["import { EndpointsNameList } from '../EndpointsNameList'\nimport { useState } from 'react'\nimport { useDispatch } from 'react-redux'\n\n\nexport const GetEndpointBt = ({ endpoint, idEndpoint }) => {\n\n    const dispatch = useDispatch()\n\n    //Local state download icon\n    const [downloadIcon, setdownloadIcon] = useState(false)\n\n    const endpointFetch = async () => {\n        if (!EndpointsNameList.includes(endpoint.toLowerCase())) {\n            console.error(`Неможливо перейти за адресою typicode.com/${endpoint}/${idEndpoint}`)\n            return\n        }\n        setdownloadIcon(true)\n        const resp = await fetch(`https://jsonplaceholder.typicode.com/${endpoint}/${idEndpoint}`)\n        const json = await resp.json()\n        setdownloadIcon(false)\n\n        // add to store\n        dispatch({ type: 'ADDTOSTORE', payload: json })\n        dispatch({ type: 'SAVEINPUTSVALEU', payload: endpoint })\n    }\n\n\n    return (\n        <>\n            <button onClick={endpointFetch}>Get endpoint </button>\n            { downloadIcon && <span>&#9883;</span>}\n        </>\n\n    )\n}"]},"metadata":{},"sourceType":"module"}