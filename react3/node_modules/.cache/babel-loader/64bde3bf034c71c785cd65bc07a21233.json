{"ast":null,"code":"var _jsxFileName = \"/home/oleksandr/\\u0421\\u0442\\u0456\\u043B\\u044C\\u043D\\u0438\\u0446\\u044F/study/okta web/react3/src/component-hooks/Counter/index.js\",\n    _s = $RefreshSig$();\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { incCounter, decCounter, resetCounter } from '../redux/action-create';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Counter = () => {\n  _s();\n\n  const {\n    counter\n  } = useSelector(({\n    counter\n  }) => counter);\n  const dispatch = useDispatch();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Counter - \", counter, /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch(incCounter()),\n      children: \"INC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Counter, \"d1jkcyFWAvBqdYkiVBy3CXCUVro=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Counter;\n\nvar _c;\n\n$RefreshReg$(_c, \"Counter\");","map":{"version":3,"sources":["/home/oleksandr/Стільниця/study/okta web/react3/src/component-hooks/Counter/index.js"],"names":["useSelector","useDispatch","incCounter","decCounter","resetCounter","Counter","counter","dispatch"],"mappings":";;;AAAA,SAAQA,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,SAAQC,UAAR,EAAoBC,UAApB,EAAgCC,YAAhC,QAAmD,wBAAnD;;AAEA,OAAO,MAAMC,OAAO,GAAG,MAAM;AAAA;;AAEzB,QAAM;AAAEC,IAAAA;AAAF,MAAcN,WAAW,CAAC,CAAC;AAAEM,IAAAA;AAAF,GAAD,KAAkBA,OAAnB,CAA/B;AACA,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AAEA,sBACI;AAAA,6BACeK,OADf,eAEI;AAAQ,MAAA,OAAO,EAAE,MAAMC,QAAQ,CAACL,UAAU,EAAX,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CAXM;;GAAMG,O;UAEWL,W,EACHC,W;;;KAHRI,O","sourcesContent":["import {useSelector, useDispatch} from 'react-redux'\nimport {incCounter, decCounter, resetCounter} from '../redux/action-create'\n\nexport const Counter = () => {\n\n    const { counter } = useSelector(({ counter }) => (counter))\n    const dispatch = useDispatch()\n\n    return (\n        <div>\n            Counter - {counter}\n            <button onClick={() => dispatch(incCounter())}>INC</button>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}